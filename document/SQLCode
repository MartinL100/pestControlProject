创建数据表SQL语句

=======================================================================================================

模块所属人：古成全


drop table  drug_stockpile;
drop table sys_drug;
drop table sys_stockpile;

/*==============================================================*/
/* Table: sys_drug   药剂表                                           */
/*==============================================================*/
create table sys_drug
(
   drug_id              int not null auto_increment,
   drug_name            varchar(32),
   drug_cure_type       bigint,
   drug_type            bigint,
   drug_use_way         text,
   drug_num             int,
   primary key (drug_id)
);



/*==============================================================*/
/* Table: drug_stockpile   出库器材中间表                                   */
/*==============================================================*/
create table drug_stockpile
(
   drug_id              int,
   stockpile_id         int,
   stockpile_num        int
);

alter table drug_stockpile add constraint FK_Reference_12 foreign key (drug_id)
      references sys_drug (drug_id) on delete restrict on update restrict;

alter table drug_stockpile add constraint FK_Reference_13 foreign key (stockpile_id)
      references sys_stockpile (stockpile_id) on delete restrict on update restrict;

 创建订单表视图
CREATE v_drug_tockpile as
SELECT DISTINCT d.drug_id,d.drug_name,d.drug_type,d.drug_cure_type,d.drug_use_way,
s.stockpile_id,
sd.stockpile_num
from  drug_stockpile s,sys_drug d,drug_stockpile sd
where s.drug_id=d.drug_id and s.stockpile_id=sd.stockpile_id
 GROUP BY d.drug_id

/*==============================================================*/
/* Table: sys_stockpile   出库信息表                                      */
/*==============================================================*/
create table sys_stockpile
(
   stockpile_id         int not null auto_increment,
   stockpile_class      bigint,
   stockpile_man        bigint,
   stockpile_date       varchar(48),
   stockpile_num        int,
   primary key (stockpile_id)
);


-- 删除存储过程
DROP PROCEDURE saveSysDrug

-- 创建存储过程
DELIMITER $
CREATE PROCEDURE saveSysDrug
(IN drugNameIn VARCHAR(32),IN drugCureTypeIdIn BIGINT,
IN drugTypeIdIn BIGINT,IN drugUseWayIn VARCHAR(32),IN drugNum INT,
OUT res INT)
BEGIN
-- 定查询到的数量变量
DECLARE  renum INT DEFAULT 0;
-- 定义接受查询到的drugId
DECLARE drugId INT DEFAULT 0;
  -- 根据商品去查询是否存在，存在就返回1否则0
      SELECT COUNT(*),drug_id INTO renum,drugId FROM sys_drug WHERE  drug_name=drugNameIn;
   IF renum=1 THEN
      -- 存在,累加数量
       UPDATE sys_drug SET drug_num=drug_num+drugNum WHERE drug_name=drugNameIn;
   commit;
   ELSE
        -- 不存在新加一行数据
        INSERT INTO sys_drug(drug_name,drug_cure_type,drug_type,drug_use_way,drug_num) VALUES(drugNameIn,drugCureTypeIdIn,drugTypeIdIn,drugUseWayIn,drugNum);
    commit;
   END IF;

    -- 返回结果
    SET res:=renum;
END $



---   添加中间表数据 存储过程

DELIMITER $
CREATE PROCEDURE addStockpileDrug
(IN drugId INT,IN stockpileId INT,
IN stockpileNum BIGINT)
BEGIN
-- 定查询到的数量变量
DECLARE  renum INT DEFAULT 0;
-- 定义接受查询到的drugId
DECLARE drugId INT DEFAULT 0;
DECLARE num INT DEFAULT 0;
  -- 根据商品去查询是否存在，存在就返回1否则0
      SELECT COUNT(*),drug_id,drug_num INTO renum,drugId,num FROM sys_drug WHERE  drug_id=drugId;
   SET num:=num-stockpileNum;
   IF renum=1 THEN
      -- 存在,累加数量
       UPDATE sys_drug SET drug_num=num WHERE drug_id=drugId;
         commit;
       INSERT INTO drug_stockpile(drug_id, stockpile_id, stockpile_num)  VALUES(drugId,stockpileId,stockpileNum);
  commit;
   ELSE
 UPDATE sys_drug SET drug_num=drug_num WHERE drug_id=drugId;

   END IF;
END $







=====================================================================================================
模块所属人：龚亮

/*==============================================================*/
/* Table: t_specialist                                          */
/*==============================================================*/
alter table t_specialist comment '专家表';
create table t_specialist
(
   specialist_id        bigint not null auto_increment comment '专家ID',
   specialist_name      varchar(32) comment '专家姓名',
   specialist_sex       varchar(32) comment '专家性别',
   specialist_birthday  varchar(48) comment '专家生日',
   specialist_path      varchar(64) comment '专家头像',
   specialist_speciality varchar(64) comment '专家专长',
   specialist_duty      varchar(64) comment '专家职务',
   specialist_tel       varchar(64) comment '专家电话',
   specialist_units     varchar(64) comment '专家工作单位',
   specialist_site      varchar(64) comment '专家住址',
   specialist_email     varchar(64) comment '专家邮箱',
   primary key (specialist_id)
);



/*==============================================================*/
/* Table: result_specialist                                     */
/*==============================================================*/

alter table result_specialist comment '会商结果和专家中间表';
create table result_specialist
(
   result_id            bigint comment '结果ID',
   specialist_id        bigint comment '专家ID'
);
alter table result_specialist add constraint FK_Reference_10 foreign key (result_id)
      references conference_result (result_id) on delete restrict on update restrict;

alter table result_specialist add constraint FK_Reference_11 foreign key (specialist_id)
      references t_specialist (specialist_id) on delete restrict on update restrict;




/*==============================================================*/
/* Table: conference_result                                     */
/*==============================================================*/
alter table conference_result comment '专家会商结果表';
create table conference_result
(
   result_id            bigint not null comment '结果ID',
   conference_id        bigint comment '专家会商ID',
   conference_date      varchar(48) comment '专家会审日期',
   conference_result    text comment '专家会商结果',
   primary key (result_id)
);
alter table conference_result add constraint FK_Reference_9 foreign key (conference_id)
      references t_conference (conference_id) on delete restrict on update restrict;


drop table if exists t_conference;

/*==============================================================*/
/* Table: t_conference                                          */
/*==============================================================*/
alter table t_conference comment '专家会商表';
create table t_conference
(
   conference_id        bigint not null auto_increment comment '专家会商ID',
   event_id             bigint comment '事件ID',
   primary key (conference_id)
);
alter table t_conference add constraint FK_Reference_4 foreign key (event_id)
      references sys_event (event_id) on delete restrict on update restrict;




      =========================================

      模块所属人：刘聪
      ==========================================


   /*==============================================================*/
   /* DBMS name:      MySQL 5.0                                    */
   /* Created on:     2019/6/22 10:05:21                           */
   /*==============================================================*/


   drop table if exists t_log;

   drop table if exists t_power;

   drop table if exists t_role;

   drop table if exists t_user;

   /*==============================================================*/
   /* Table: t_log                                                 */
   /*==============================================================*/
   create table t_log
   (
      log_id               bigint not null auto_increment,
      log_descrip          text,
      log_date             varchar(0),
      primary key (log_id)
   );

   alter table t_log comment '日志表';

   /*==============================================================*/
   /* Table: t_power                                               */
   /*==============================================================*/
   create table t_power
   (
      power_id             bigint not null auto_increment,
      role_id              bigint,
      power_name           varchar(32),
      power_resource       varchar(32),
      power_tag            int,
      primary key (power_id)
   );

   /*==============================================================*/
   /* Table: t_role                                                */
   /*==============================================================*/
   create table t_role
   (
      role_id              bigint not null auto_increment,
      role_name             varchar(32),
      primary key (role_id)
   );

   alter table t_role comment '角色表';

   /*==============================================================*/
   /* Table: t_user                                                */
   /*==============================================================*/
   create table t_user
   (
      user_id              bigint not null auto_increment,
      role_id              bigint,
      user_name            varchar(32),
      real_name            varchar(32),
      user_password        varchar(32),
      primary key (user_id)
   );

   alter table t_user comment '用户表';

   alter table t_power add constraint FK_Reference_2 foreign key (role_id)
         references t_role (role_id) on delete restrict on update restrict;

   alter table t_user add constraint FK_Reference_1 foreign key (role_id)
         references t_role (role_id) on delete restrict on update restrict;








================================================================================================================
模块负责人   曾贤富

-- ----------------------------
-- Table structure for t_pestis  虫害表
-- ----------------------------


DROP TABLE IF EXISTS `t_pestis`;
CREATE TABLE `t_pestis` (
 `pestis_id` INT NOT NULL AUTO_INCREMENT COMMENT '虫害ID',
 `pestis_name` VARCHAR(64) NULL DEFAULT NULL COMMENT '虫害名',
 `pestis_breed` VARCHAR(64) NULL DEFAULT NULL COMMENT '虫害繁殖',
 `pestis_host` VARCHAR(64) NULL DEFAULT NULL COMMENT '虫害寄主',
 `pestis_enemy` VARCHAR(64) NULL DEFAULT NULL COMMENT '虫害天敌',
 `pestis_harm` VARCHAR(64) NULL DEFAULT NULL COMMENT '主要危害',
 `pestis_defense` VARCHAR(64) NULL DEFAULT NULL COMMENT '防御措施',
 `pestis_photo` VARCHAR(128) NULL DEFAULT NULL COMMENT '幼虫图片',
 `pestis_adultImages` VARCHAR(128) NULL DEFAULT NULL COMMENT '成虫图片',
 PRIMARY KEY (`pestis_id`)
);
SELECT * FROM t_pestis





-- ----------------------------
-- Table structure for t_disease  病害表
-- ----------------------------
DROP TABLE IF EXISTS `t_disease`;
CREATE TABLE `t_disease` (
 `disease_id` INT NULL DEFAULT NULL AUTO_INCREMENT COMMENT '病害id',
 `disease_name` VARCHAR(48) NULL DEFAULT NULL COMMENT '病害名称',
 `disease_ source` VARCHAR(48) NULL DEFAULT NULL COMMENT '病害病源',
 `disease_symptom` VARCHAR(48) NULL DEFAULT NULL COMMENT '发病症状',
 `disease_law` VARCHAR(48) NULL DEFAULT NULL COMMENT '发病规律',
 `disease_harm` VARCHAR(48) NULL DEFAULT NULL COMMENT '主要危害',
 `disease_photo` VARCHAR(64) NULL DEFAULT NULL COMMENT '图片',
 `disease_measure` VARCHAR(48) NULL DEFAULT NULL COMMENT '防治措施',
 PRIMARY KEY (`disease_id`)
);
SELECT * FROM t_disease






-- ----------------------------
-- Table structure for t_mouse  鼠害表
-- ----------------------------
DROP TABLE IF EXISTS `t_mouse`;
CREATE TABLE `t_mouse` (
 `mouse_id` INT NULL DEFAULT NULL AUTO_INCREMENT COMMENT '鼠害id',
 `mouse_name` VARCHAR(48) NULL DEFAULT NULL COMMENT '鼠害名称',
 `mouse_ breed` VARCHAR(48) NULL DEFAULT NULL COMMENT '鼠害繁殖',
 `mouse_food` VARCHAR(48) NULL DEFAULT NULL COMMENT '鼠害食物',
 `mouse_natural` VARCHAR(48) NULL DEFAULT NULL COMMENT '鼠害天敌',
 `mouse_prevent` VARCHAR(48) NULL DEFAULT NULL COMMENT '鼠害防治措施',
 `mouse_photo` VARCHAR(64) NULL DEFAULT NULL COMMENT '鼠害图片',
 `mouse_harm` VARCHAR(48) NULL DEFAULT NULL COMMENT '主要危害',
 PRIMARY KEY (`mouse_id`)
);

SELECT * FROM t_mouse





-- 舒俊益

/*==============================================================*/
/* DBMS name:      MySQL 5.0                                    */
/* Created on:     2019/6/21 16:53:15                           */
/*==============================================================*/


DROP TABLE IF EXISTS sys_event;

/*==============================================================*/
/* Table: sys_event                                             */
/*==============================================================*/
CREATE TABLE sys_event
(
   event_Id             BIGINT NOT NULL AUTO_INCREMENT,
   even_tName           VARCHAR(64),
   occur_Time           VARCHAR(64),
   disaster_stage       BIGINT,
   event_describe       TEXT,
   photo_Path           VARCHAR(64),
   disaster_type        BIGINT,
   find_way             BIGINT,
   area_Id              BIGINT,
   class_Id             BIGINT,
   event_loss                 VARCHAR(64),
   event_area                 VARCHAR(64),
   plan                 VARCHAR(64),
   PRIMARY KEY (event_Id)
);





-- =====================================================================================================
-- 模块所属人：龚亮

/*==============================================================*/
/* Table: t_specialist                                          */
/*==============================================================*/
ALTER TABLE t_specialist COMMENT '专家表';
CREATE TABLE t_specialist
(
   specialist_id        BIGINT NOT NULL AUTO_INCREMENT COMMENT '专家ID',
   specialist_name      VARCHAR(32) COMMENT '专家姓名',
   specialist_sex       VARCHAR(32) COMMENT '专家性别',
   specialist_birthday  VARCHAR(48) COMMENT '专家生日',
   specialist_path      VARCHAR(64) COMMENT '专家头像',
   specialist_speciality VARCHAR(64) COMMENT '专家专长',
   specialist_duty      VARCHAR(64) COMMENT '专家职务',
   specialist_tel       VARCHAR(64) COMMENT '专家电话',
   specialist_units     VARCHAR(64) COMMENT '专家工作单位',
   specialist_site      VARCHAR(64) COMMENT '专家住址',
   specialist_email     VARCHAR(64) COMMENT '专家邮箱',
   PRIMARY KEY (specialist_id)
);



/*==============================================================*/
/* Table: result_specialist                                     */
/*==============================================================*/

ALTER TABLE result_specialist COMMENT '会商结果和专家中间表';
CREATE TABLE result_specialist
(
   result_id            BIGINT COMMENT '结果ID',
   specialist_id        BIGINT COMMENT '专家ID'
);
ALTER TABLE result_specialist ADD CONSTRAINT FK_Reference_10 FOREIGN KEY (result_id)
      REFERENCES conference_result (result_id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE result_specialist ADD CONSTRAINT FK_Reference_11 FOREIGN KEY (specialist_id)
      REFERENCES t_specialist (specialist_id) ON DELETE RESTRICT ON UPDATE RESTRICT;




/*==============================================================*/
/* Table: conference_result                                     */
/*==============================================================*/
ALTER TABLE conference_result COMMENT '专家会商结果表';
CREATE TABLE conference_result
(
   result_id            BIGINT NOT NULL COMMENT '结果ID',
   conference_id        BIGINT COMMENT '专家会商ID',
   conference_date      VARCHAR(48) COMMENT '专家会审日期',
   conference_result    TEXT COMMENT '专家会商结果',
   PRIMARY KEY (result_id)
);
ALTER TABLE conference_result ADD CONSTRAINT FK_Reference_9 FOREIGN KEY (conference_id)
      REFERENCES t_conference (conference_id) ON DELETE RESTRICT ON UPDATE RESTRICT;


DROP TABLE IF EXISTS t_conference;

/*==============================================================*/
/* Table: t_conference                                          */
/*==============================================================*/
ALTER TABLE t_conference COMMENT '专家会商表';
CREATE TABLE t_conference
(
   conference_id        BIGINT NOT NULL AUTO_INCREMENT COMMENT '专家会商ID',
   event_id             BIGINT COMMENT '事件ID',
   PRIMARY KEY (conference_id)
);
ALTER TABLE t_conference ADD CONSTRAINT FK_Reference_4 FOREIGN KEY (event_id)
      REFERENCES sys_event (event_id) ON DELETE RESTRICT ON UPDATE RESTRICT;


  =========================================

      模块所属人：刘聪
      ==========================================


   /*==============================================================*/
   /* DBMS name:      MySQL 5.0                                    */
   /* Created on:     2019/6/22 10:05:21                           */
   /*==============================================================*/


   DROP TABLE IF EXISTS t_log;

   DROP TABLE IF EXISTS t_power;

   DROP TABLE IF EXISTS t_role;

   DROP TABLE IF EXISTS t_user;

   /*==============================================================*/
   /* Table: t_log                                                 */
   /*==============================================================*/
   CREATE TABLE t_log
   (
      log_id               BIGINT NOT NULL AUTO_INCREMENT,
      log_descrip          TEXT,
      log_date             VARCHAR(64),
      PRIMARY KEY (log_id)
   );

   ALTER TABLE t_log COMMENT '日志表';

   /*==============================================================*/
   /* Table: t_power                                               */
   /*==============================================================*/
   CREATE TABLE t_power
   (
      power_id             BIGINT NOT NULL AUTO_INCREMENT,
      role_id              BIGINT,
      power_name           VARCHAR(32),
      power_resource       VARCHAR(32),
      power_tag            INT,
      PRIMARY KEY (power_id)
   );

   /*==============================================================*/
   /* Table: t_role                                                */
   /*==============================================================*/
   CREATE TABLE t_role
   (
      role_id              BIGINT NOT NULL AUTO_INCREMENT,
      role_name             VARCHAR(32),
      PRIMARY KEY (role_id)
   );

   ALTER TABLE t_role COMMENT '角色表';

   /*==============================================================*/
   /* Table: t_user                                                */
   /*==============================================================*/
   CREATE TABLE t_user
   (
      user_id              BIGINT NOT NULL AUTO_INCREMENT,
      role_id              BIGINT,
      user_name            VARCHAR(32),
      real_name            VARCHAR(32),
      user_password        VARCHAR(32),
      PRIMARY KEY (user_id)
   );

   ALTER TABLE t_user COMMENT '用户表';

   ALTER TABLE t_power ADD CONSTRAINT FK_Reference_2 FOREIGN KEY (role_id)
         REFERENCES t_role (role_id) ON DELETE RESTRICT ON UPDATE RESTRICT;

   ALTER TABLE t_user ADD CONSTRAINT FK_Reference_1 FOREIGN KEY (role_id)
         REFERENCES t_role (role_id) ON DELETE RESTRICT ON UPDATE RESTRICT;



-- ----------------------------
-- Table structure for t_pestis  虫害表
-- ----------------------------


DROP TABLE IF EXISTS `t_pestis`;
CREATE TABLE `t_pestis` (
 `pestis_id` INT NOT NULL AUTO_INCREMENT COMMENT '虫害ID',
 `pestis_name` VARCHAR(64) NULL DEFAULT NULL COMMENT '虫害名',
 `pestis_breed` VARCHAR(64) NULL DEFAULT NULL COMMENT '虫害繁殖',
 `pestis_host` VARCHAR(64) NULL DEFAULT NULL COMMENT '虫害寄主',
 `pestis_enemy` VARCHAR(64) NULL DEFAULT NULL COMMENT '虫害天敌',
 `pestis_harm` VARCHAR(64) NULL DEFAULT NULL COMMENT '主要危害',
 `pestis_defense` VARCHAR(64) NULL DEFAULT NULL COMMENT '防御措施',
 `pestis_photo` VARCHAR(128) NULL DEFAULT NULL COMMENT '幼虫图片',
 `pestis_adultImages` VARCHAR(128) NULL DEFAULT NULL COMMENT '成虫图片',
 PRIMARY KEY (`pestis_id`)
);
SELECT * FROM t_pestis


================================================================================================================
-- 模块负责人   曾贤富


-- ----------------------------
-- Table structure for t_disease  病害表
-- ----------------------------
DROP TABLE IF EXISTS `t_disease`;
CREATE TABLE `t_disease` (
 `disease_id` INT NULL DEFAULT NULL AUTO_INCREMENT COMMENT '病害id',
 `disease_name` VARCHAR(48) NULL DEFAULT NULL COMMENT '病害名称',
 `disease_ source` VARCHAR(48) NULL DEFAULT NULL COMMENT '病害病源',
 `disease_symptom` VARCHAR(48) NULL DEFAULT NULL COMMENT '发病症状',
 `disease_law` VARCHAR(48) NULL DEFAULT NULL COMMENT '发病规律',
 `disease_harm` VARCHAR(48) NULL DEFAULT NULL COMMENT '主要危害',
 `disease_photo` VARCHAR(64) NULL DEFAULT NULL COMMENT '图片',
 `disease_measure` VARCHAR(48) NULL DEFAULT NULL COMMENT '防治措施',
 PRIMARY KEY (`disease_id`)
);
SELECT * FROM t_disease






-- ----------------------------
-- Table structure for t_mouse  鼠害表
-- ----------------------------
DROP TABLE IF EXISTS `t_mouse`;
CREATE TABLE `t_mouse` (
 `mouse_id` INT NULL DEFAULT NULL AUTO_INCREMENT COMMENT '鼠害id',
 `mouse_name` VARCHAR(48) NULL DEFAULT NULL COMMENT '鼠害名称',
 `mouse_ breed` VARCHAR(48) NULL DEFAULT NULL COMMENT '鼠害繁殖',
 `mouse_food` VARCHAR(48) NULL DEFAULT NULL COMMENT '鼠害食物',
 `mouse_natural` VARCHAR(48) NULL DEFAULT NULL COMMENT '鼠害天敌',
 `mouse_prevent` VARCHAR(48) NULL DEFAULT NULL COMMENT '鼠害防治措施',
 `mouse_photo` VARCHAR(64) NULL DEFAULT NULL COMMENT '鼠害图片',
 `mouse_harm` VARCHAR(48) NULL DEFAULT NULL COMMENT '主要危害',
 PRIMARY KEY (`mouse_id`)
);

SELECT * FROM t_mouse


-- 模块所属人：刘俊麟

DROP TABLE sys_type;

/*==============================================================*/
/* Table: sys_type             下拉类型表                                 */
/*==============================================================*/
CREATE TABLE sys_type
(
   type_id              BIGINT NOT NULL  AUTO_INCREMENT,
   type_name            VARCHAR(48),
   type_key             INT,
   type_val             VARCHAR(48),
   PRIMARY KEY (type_id)
);





DROP TABLE IF EXISTS sys_area;
/*==============================================================*/
/* Table: sys_area    区域表                                          */
/*==============================================================*/
CREATE TABLE sys_area
(
   area_id              INT NOT NULL AUTO_INCREMENT,
   area_name            VARCHAR(32),
   area_tree_type       VARCHAR(48),
   area_good_tree       VARCHAR(48),
   area_adress_id       BIGINT,
   PRIMARY KEY (area_id)
);

SELECT  *FROM sys_area



DROP TABLE IF EXISTS sys_class;

/*==============================================================*/
/* Table: sys_class       小班表                                      */
/*==============================================================*/
CREATE TABLE sys_class
(
   sclass_id            INT NOT NULL AUTO_INCREMENT,
   area_id              INT,
   sclass_name          VARCHAR(32),
   sclass_leader        VARCHAR(32),
   sclass_leader_tel    VARCHAR(48),
   sclass_num           INT,
   sclass_start_date    VARCHAR(48),
   PRIMARY KEY (sclass_id)
);

ALTER TABLE sys_class ADD CONSTRAINT FK_Reference_2 FOREIGN KEY (area_id)
      REFERENCES sys_area (area_id) ON DELETE RESTRICT ON UPDATE RESTRICT;
DROP TABLE sys_class





